version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: courseforge_postgres
    environment:
      POSTGRES_DB: courseforge
      POSTGRES_USER: courseforge
      POSTGRES_PASSWORD: courseforge_dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - courseforge_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: courseforge_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass courseforge_redis_password
    restart: unless-stopped
    networks:
      - courseforge_network

  # MinIO for local S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: courseforge_minio
    environment:
      MINIO_ROOT_USER: courseforge_minio
      MINIO_ROOT_PASSWORD: courseforge_minio_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - courseforge_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: courseforge_backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://courseforge:courseforge_dev_password@postgres:5432/courseforge
      REDIS_URL: redis://:courseforge_redis_password@redis:6379
      JWT_SECRET: your_jwt_secret_key_here
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: courseforge_minio
      MINIO_SECRET_KEY: courseforge_minio_password
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - courseforge_network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: courseforge_frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - courseforge_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  courseforge_network:
    driver: bridge